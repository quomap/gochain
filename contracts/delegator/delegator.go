package delegator

import (
	"bytes"

	"github.com/gochain-io/gochain/common"
	"github.com/gochain-io/gochain/core/vm"
)

// Hex-encoded compiled solidity contracts (delegator.sol).
const (
	DelegatorBin = `608060405273eeffeeffeeffeeffeeffeeffeeffeeffeeffeeff6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073aabbaabbaabbaabbaabbaabbaabbaabbaabbaabb600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503480156100b957600080fd5b506102a0806100c96000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063776d1a01146100ed578063d7278fdc14610130578063f00e6a2a14610187575b34801561006357600080fd5b506060600080368080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000808351602085016000856127105a03f13d604051816000823e82600081146100e9578282f35b8282fd5b3480156100f957600080fd5b5061012e600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506101de565b005b34801561013c57600080fd5b50610145610221565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561019357600080fd5b5061019c61024b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050905600a165627a7a72305820738c9aa8f4e6f99cf43fb24df3ca6a30d8e7fc75881fa5bd2c50405735a37a160029`
	StorageBin   = `608060405234801561001057600080fd5b5061011f806100206000396000f300608060405260043610603f576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680639bb66b28146044575b600080fd5b348015604f57600080fd5b5060c8600480360381019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919291929050505060ca565b005b600080825160208401856127105a03f43d604051816000823e826000811460ef578282f35b8282fd00a165627a7a7230582066e5f062551aab8c16aaac9d9eb84dd5138b2ea37a44d1cd624ac6a075e6f1cc0029`
)

// DelegatorCode returns delegation code with a given storage address and target contract.
func DelegatorCode(storage, target common.Address) []byte {
	code := common.FromHex(DelegatorBin)

	// Replace placeholder addresses for storage & target contract.
	code = bytes.Replace(code, common.FromHex(`0xaabbaabbaabbaabbaabbaabbaabbaabbaabbaabb`), storage[:], -1)
	code = bytes.Replace(code, common.FromHex(`0xeeffeeffeeffeeffeeffeeffeeffeeffeeffeeff`), target[:], -1)

	// Strip auxdata and replace with system contract suffix.
	code = vm.TrimContractCodeAuxdata(code)
	code = append(code, vm.SystemContractSuffix...)
	return code
}

// StorageCode returns a storage contract used for delegation.
func StorageCode() []byte {
	code := common.FromHex(StorageBin)
	code = vm.TrimContractCodeAuxdata(code)
	code = append(code, vm.SystemContractSuffix...)
	return code
}
